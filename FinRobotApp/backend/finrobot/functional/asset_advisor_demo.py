import pandas as pd

# 模拟客户数据库资产明细
assets = pd.DataFrame([
    {"资产名称": "贵州茅台", "资产类型": "股票", "持仓市值": 100000, "买入成本": 1800, "现价": 1700, "持有周期": "2年"},
    {"资产名称": "宁德时代", "资产类型": "股票", "持仓市值": 80000, "买入成本": 350, "现价": 320, "持有周期": "1年"},
    {"资产名称": "招商银行", "资产类型": "股票", "持仓市值": 60000, "买入成本": 40, "现价": 38, "持有周期": "3年"},
    {"资产名称": "华夏成长基金", "资产类型": "基金", "持仓市值": 50000, "买入成本": 1.5, "现价": 1.7, "持有周期": "1年"},
    {"资产名称": "比特币", "资产类型": "数字货币", "持仓市值": 20000, "买入成本": 30000, "现价": 35000, "持有周期": "半年"},
    {"资产名称": "现金", "资产类型": "现金", "持仓市值": 30000, "买入成本": 1, "现价": 1, "持有周期": "随时"},
])

# 简化版多因子分析与多方案建议（实际可扩展为更复杂模型）
def analyze_asset(asset):
    # 专业分析（示例）
    if asset["资产类型"] == "股票":
        value = "PE 25，低于行业均值，估值合理" if asset["资产名称"] == "贵州茅台" else "PE 40，略高于行业均值"
        growth = "营收年增速15%，净利增速12%" if asset["资产名称"] == "贵州茅台" else "营收年增速30%，净利增速25%"
        momentum = "近3月下跌5%" if asset["资产名称"] == "贵州茅台" else "近3月上涨8%"
        quality = "ROE 30%，盈利能力强" if asset["资产名称"] == "贵州茅台" else "ROE 20%，盈利能力良好"
        volatility = "年化波动率18%" if asset["资产名称"] == "贵州茅台" else "年化波动率28%"
    elif asset["资产类型"] == "基金":
        value = "估值合理"
        growth = "年化增长20%"
        momentum = "近3月上涨6%"
        quality = "分散投资，风险较低"
        volatility = "年化波动率12%"
    elif asset["资产类型"] == "数字货币":
        value = "估值弹性大"
        growth = "年化增长50%"
        momentum = "近3月上涨15%"
        quality = "高风险高收益"
        volatility = "年化波动率60%"
    elif asset["资产类型"] == "现金":
        value = "无风险"
        growth = "无增长"
        momentum = "无波动"
        quality = "流动性极高"
        volatility = "0%"
    else:
        value = growth = momentum = quality = volatility = "-"

    # 多方案建议
    if asset["资产类型"] == "股票":
        plans = [
            {"方案": "继续持有", "预期收益": "-5%~+12%/年", "风险概率": "15%最大回撤", "适用客户": "长期投资、风险中性"},
            {"方案": "减持部分", "预期收益": "0%~+8%/年", "风险概率": "10%最大回撤", "适用客户": "稳健型、需资金流动性"},
            {"方案": "轮动调仓", "预期收益": "-10%~+20%/年", "风险概率": "25%最大回撤", "适用客户": "进取型、追求高收益"},
        ]
    elif asset["资产类型"] == "基金":
        plans = [
            {"方案": "继续持有", "预期收益": "0%~+10%/年", "风险概率": "8%最大回撤", "适用客户": "稳健型"},
            {"方案": "增配", "预期收益": "+5%~+12%/年", "风险概率": "10%最大回撤", "适用客户": "平衡型"},
        ]
    elif asset["资产类型"] == "数字货币":
        plans = [
            {"方案": "维持小比例配置", "预期收益": "-20%~+50%/年", "风险概率": "40%最大回撤", "适用客户": "高风险偏好"},
            {"方案": "全部减持", "预期收益": "0%", "风险概率": "0%", "适用客户": "保守型"},
        ]
    elif asset["资产类型"] == "现金":
        plans = [
            {"方案": "保持现有比例", "预期收益": "0%", "风险概率": "0%", "适用客户": "所有客户"},
            {"方案": "适度增配", "预期收益": "0%", "风险概率": "0%", "适用客户": "有大额支出需求"},
        ]
    else:
        plans = []

    # 通俗解释
    if asset["资产类型"] == "股票":
        explain = "股票适合长期持有，短期波动大，建议根据自身风险承受能力选择方案。"
    elif asset["资产类型"] == "基金":
        explain = "基金分散风险，适合稳健投资，收益相对稳定。"
    elif asset["资产类型"] == "数字货币":
        explain = "数字货币涨跌大，适合小比例配置，谨慎投资。"
    elif asset["资产类型"] == "现金":
        explain = "现金流动性强，适合应急和日常支出。"
    else:
        explain = "-"

    return {
        "资产名称": asset["资产名称"],
        "资产类型": asset["资产类型"],
        "专业分析": {
            "价值": value,
            "成长": growth,
            "动量": momentum,
            "质量": quality,
            "波动率": volatility,
        },
        "多方案建议": plans,
        "通俗解释": explain
    }

# 对每个资产进行分析
results = [analyze_asset(row) for _, row in assets.iterrows()]

# 输出结果
for res in results:
    print(f"资产名称: {res['资产名称']} ({res['资产类型']})")
    print("专业分析:")
    for k, v in res["专业分析"].items():
        print(f"  {k}: {v}")
    print("多方案建议:")
    for plan in res["多方案建议"]:
        print(f"  方案: {plan['方案']} | 预期收益: {plan['预期收益']} | 风险概率: {plan['风险概率']} | 适用客户: {plan['适用客户']}")
    print(f"通俗解释: {res['通俗解释']}")
    print("-"*40) 